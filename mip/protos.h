
struct optab;
struct symtab;
struct sw;

void allo0(void);
int allo(NODE *p, struct optab *q);
void cerror(char *s, ...);
void werror(char *s, ...);
void uerror(char *s, ...);
void rfree(int, TWORD t);
void rbusy(int r, TWORD t);
void rwprint(int rw);
void reclaim(NODE *p, int, int);
void walkf(NODE *, void (*f)(NODE *));
void allchk(void);
void tfree(NODE *);
int tshape(NODE *, int);
void prtdcon(NODE *p);
unsigned int caloff(void);
void tinit(void);
void tcheck(void);
void fwalk(NODE *t, int (*f)(NODE *, int, int *, int *), int down);
void mkdope(void);
int tshape(NODE *p, int shape);
int shtemp(NODE *p);
int flshape(NODE *p);
int shumul(NODE *p);
int ttype(TWORD t, int tword);
void expand(NODE *, int, char *);
void hopcode(int, int);
void adrcon(CONSZ);
void zzzcode(NODE *, int);
void insput(NODE *);
void upput(NODE *, int);
void econvert(NODE *);
int andable(NODE *);
int conval(NODE *, int, NODE *);
int ispow2(CONSZ);
void defid(NODE *q, int class);
void outstab(struct symtab *);
int getlab(void);
void ftnend(void);
void efcode(void);
void dclargs(void);
void fixarg(struct symtab *);
void cendarg(void);
void defalign(int);
void outstruct(struct symtab *, struct suedef *);
int fldal(unsigned int);
void vfdzero(int);
void zecode(int);
void ilbrace(void);
void irbrace(void);
void irbrace(void);
void putbyte(int v);
void endinit(void);
void doinit(NODE *p);
void ecomp(NODE *p);
void cinit(NODE *, int);
void bccode(void);
int upoff(int size, int alignment, int *poff);
void fldty(struct symtab *p);
void nidcl(NODE *p, int class);
int noinit(void);
int eprint(NODE *, int, int *, int *);
int uclass(int class);
int fixclass(int, TWORD type);
int cisreg(TWORD);
void lineid(int, char *);
void myreader(NODE *);
void mycanon(NODE *);
void delay(NODE *);
int delay1(NODE *);
void delay2(NODE *);
void setregs(void);
void p2bend(void);
void codgen(NODE *p, int);
int autoincr(NODE *);
int deltest(NODE *);
void canon(NODE *);
void order(NODE *, int);
int p2init(int argc, char *argv[]);
void p2bbeg(int aoff, int myreg);
void rallo(NODE *p, int);
int offstar(NODE *p);
int offset(NODE *p, int);
int tlen(NODE *p);
int setincr(NODE *);
int setbin(NODE *);
void stoarg(NODE *p, int);
void stoasg(NODE *p, int);
void constore(NODE *);
void markcall(NODE *);
void oreg2(NODE *p);
int notoff(TWORD, int, CONSZ, char *);
void makeor2(NODE *p, NODE *q, int, int);
int base(NODE *);
void ejobcode(int);
void lxenter(char *s, short m);
void lxmore(int c, int m);
void lxinit(void);
void bycode(int, int);
void lxcom(void);
void pstab(char *, int);
void psline(void);
int notlval(NODE *);
int icons(NODE *);
void ecode(NODE *p);
int yylex(void);
void yyerror(char *s);
void p2tree(NODE *p);
int rewfld(NODE *p);
int freetemp(int k);
