#	$Id$
#
# Makefile for the Fortran 77 command
#  Running on the @targmach@
#  Generating code for the @targmach@
#  Using the Johnson C compiler's second pass (binary version)
VPATH=@srcdir@
srcdir=@srcdir@
top_srcdir=@top_srcdir@
builddir=@builddir@
top_builddir=@top_builddir@
XFL=-DPCC_DEBUG  -Wall -Wmissing-prototypes -Wstrict-prototypes -Werror

CC = @CC@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@ ${XFL} -I${srcdir} -I${builddir} -I${top_builddir} \
	-I${MIPDIR} -I${MDIR} -Dmach_${TARGMACH} -I${top_srcdir}/os/${TARGOS} \
	-Dos_${TARGOS}
CPPFLAGS = @CPPFLAGS@ -DFCOM -DLANG_F77
LIBS = @LIBS@
LDFLAGS = @LDFLAGS@
TARGOS = @targos@
TARGMACH = @targmach@
prefix = @prefix@
exec_prefix = @exec_prefix@
libexecdir = @libexecdir@
datarootdir = @datarootdir@
mandir = @mandir@
strip = @strip@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
YFLAGS = -d

MDIR=$(top_srcdir)/arch/$(TARGMACH)
MIPDIR=$(top_srcdir)/mip

DEST=@BINPREFIX@fcom

OBJS = main.o init.o proc.o gram.o lex.o \
	  equiv.o data.o expr.o exec.o intr.o io.o misc.o error.o\
	  put.o putscj.o flocal.o

all: ${DEST}

${DEST}: $(OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) -o $@

gram.c:	gram.head gram.dcl gram.expr gram.exec gram.io tokdefs
	( sed <tokdefs "s/#define/%token/" ;\
		cat gram.head gram.dcl gram.expr gram.exec gram.io ) >gram.in
	$(YACC) $(YFLAGS) gram.in
	mv y.tab.c gram.c
	mv y.tab.h gram.h
	rm gram.in

tokdefs: tokens
	grep -n . <tokens | sed "s/\([^:]*\):\(.*\)/#define \2 \1/" >tokdefs

lex.o : tokdefs
driver.o $(OBJS)  : defs.h defines.h ftypes.h

clean:
	/bin/rm -f $(OBJS) ${DEST} gram.in gram.[ch] tokdefs

install: 
	${INSTALL_PROGRAM} ${DEST} ${bindir}
	@if [ ${strip} = yes ]; then            \
		strip ${bindir}/${DEST} ;       \
		echo strip ${bindir}/${DEST} ;  \
	fi

.c.o :
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $*.c

flocal.o: $(MDIR)/flocal.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $(MDIR)/flocal.c
